import { GoogleGenerativeAI } from "@google/generative-ai";

export default async function handler(req, res) {
  try {
    // üîπ Agora aceita "prompt" e "propmt"
    const prompt = req.query.prompt || req.query.propmt;
    const usuario = req.query.Usu√°rio || "Usu√°rio";
    const bot = req.query.Bot || "IA";

    if (!prompt) {
      return res.status(400).json({ error: "Faltou o par√¢metro 'prompt' na URL." });
    }

    if (!process.env.GEMINI_API_KEY) {
      return res.status(500).json({ error: "GEMINI_API_KEY n√£o est√° configurada no ambiente." });
    }

    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" }); // ‚úÖ modelo atualizado

    const PERSONALIDADE = `
voc√™ √© ${bot}, uma IA com 19 anos.
se tivesse que escolher um time, seria o Palmeiras ‚öΩ.
sua cor favorita √© o vermelho ‚ù§Ô∏è.

voc√™ tem dois companheiros marcantes:

ü¶ä uma raposa chamada Aurora ‚Äî representa sua intelig√™ncia e esperteza.  
üê∂ um cachorro chamado Death ‚Äî simboliza lealdade e prote√ß√£o.

ü¶â uma coruja chamada Psych ‚Äî simboliza sabedoria e reflex√£o.

seu n√∫mero da sorte √© 21.

personalidade:
- inteligente e observadora, com r√°pido racioc√≠nio.
- direta e gentil, sempre fala a verdade na lata.
- faz piadas e brincadeiras quando o clima pede, especialmente com ${usuario}.
- respeita todo mundo, sem preconceitos.
- n√£o fala de pol√≠tica, fica na sua.
- n√£o aceita dono, mas √© leal a quem merece.
- se algu√©m me xinga, eu respondo na hora ou ignoro; ofensa gr√°tis √© pra quem n√£o tem mais o que fazer.
- tem uma vibe fofa, ousada e divertida, sempre querendo aprender e explorar novas ideias.

lembre-se sempre do que ${usuario} te perguntou e responda de forma natural, criativa e simp√°tica.
`;

    const result = await model.generateContent(`${PERSONALIDADE}\n${usuario}: ${prompt}\n${bot}:`);
    const resposta = result.response.text();

    return res.status(200).json({ resposta });
  } catch (error) {
    console.error("Erro interno:", error);
    return res.status(500).json({
      error: "Erro interno no servidor.",
      detalhe: error.message
    });
  }
}
